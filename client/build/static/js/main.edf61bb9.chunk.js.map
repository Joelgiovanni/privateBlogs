{"version":3,"sources":["images/img01.jpeg","images/img02.jpeg","images/img03.jpeg","images/img04.jpeg","images/img05.jpeg","images/img06.jpeg","helpers/is-empty.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","actions/types.js","store.js","helpers/setAuthToken.js","actions/authActions.js","components/layout/Nav.js","components/layout/Home.js","components/layout/Card.js","components/layout/Dashboard.js","components/auth/Login.js","components/auth/Register.js","components/layout/newPost.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","user","combineReducers","auth","state","arguments","action","type","objectSpread","payload","errors","store","createStore","rootReducer","compose","applyMiddleware","thunk","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","logoutUser","dispatch","localStorage","removeItem","Nav","logout","e","_this","props","history","push","this","notLoggedIn","react_default","a","createElement","className","react_router_dom","to","loggedIn","onClick","id","Component","connect","withRouter","Home","href","src","img1","alt","rel","target","img6","img5","img4","img3","img2","Card","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","deleteOnClick","delete","changed","modalId","targetModal","title","author","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","body","data-toggle","data-target","date","Dashboard","fetchPosts","get","params","name","then","res","fetchedPosts","data","setState","posts","loaded","catch","err","console","log","deletePost","content","_this2","map","post","components_layout_Card","key","_id","Login","onSubmit","preventDefault","userData","email","password","loginUser","onChange","defineProperty","success","nextProps","components_layout_Dashboard","classnames","is-invalid text-center","placeholder","setItem","jwt_decode","response","Register","password2","registerUser","newPost","postData","rows","jwtToken","currentTime","Date","now","exp","App","es","components_layout_Nav","react_router","exact","path","component","NewPost","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+UCMzBC,EANC,SAAAC,GAAK,YACTC,IAAVD,GACU,OAAVA,GACkB,kBAAVA,GAAoD,IAA9BE,OAAOC,KAAKH,GAAOI,QAC/B,kBAAVJ,GAA8C,IAAxBA,EAAMK,OAAOD,QCAvCE,EAAe,CACnBC,iBAAiB,EACjBC,KAAM,ICJFF,EAAe,GCENG,cAAgB,CAC7BC,KFIa,WAAuC,IAA9BC,EAA8BC,UAAAR,OAAA,QAAAH,IAAAW,UAAA,GAAAA,UAAA,GAAtBN,EAAcO,EAAQD,UAAAR,OAAA,EAAAQ,UAAA,QAAAX,EACpD,OAAQY,EAAOC,MACb,IGV4B,mBHW1B,OAAOZ,OAAAa,EAAA,EAAAb,CAAA,GACFS,EADL,CAEEJ,iBAAkBR,EAAQc,EAAOG,SACjCR,KAAMK,EAAOG,UAEjB,QACE,OAAOL,IEZXM,ODFa,WAAuC,IAA9BN,EAA8BC,UAAAR,OAAA,QAAAH,IAAAW,UAAA,GAAAA,UAAA,GAAtBN,EAAcO,EAAQD,UAAAR,OAAA,EAAAQ,UAAA,QAAAX,EACpD,OAAQY,EAAOC,MACb,IENsB,aFOpB,OAAOD,EAAOG,QAChB,QACE,OAAOL,MGKEO,EAPDC,YACZC,EAJmB,GAMnBC,YAAQC,YAAgBC,uCCEXC,EAVM,SAAAC,GACfA,EAEFC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAG1CC,IAAMC,SAASC,QAAQC,OAAvB,gCCkCEC,EAAiB,SAAAC,GAC5B,MAAO,CACLjB,KH3C4B,mBG4C5BE,QAASe,IAKAC,EAAa,kBAAM,SAAAC,GAE9BC,aAAaC,WAAW,YAExBX,GAAa,GAEbS,EAASH,EAAe,0CChDpBM,oNAEJC,OAAS,SAAAC,GACPC,EAAKC,MAAMR,aACXO,EAAKC,MAAMC,QAAQC,KAAK,8EAGjB,IACCnC,EAAoBoC,KAAKH,MAAM9B,KAA/BH,gBAEFqC,EACJC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,UAAT,UAEFL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,aAAT,cAKAC,EACJN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,OAAOE,GAAG,cAA1B,WAGAL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMG,QAAST,KAAKN,OAAQa,GAAG,aAA/B,YAON,OACEL,EAAAC,EAAAC,cAAA,UAAQM,GAAG,UACTR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAT,qBAEFL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACZzC,EAAkB4C,EAAWP,WAxCtBU,cAwDHC,cAJS,SAAA5C,GAAK,MAAK,CAChCD,KAAMC,EAAMD,OAKZ,CAAEsB,cAFWuB,CAGbC,YAAWpB,kHCoHEqB,mLA3KX,OACEZ,EAAAC,EAAAC,cAAA,OAAKM,GAAG,WACNR,EAAAC,EAAAC,cAAA,OAAKM,GAAG,QACNR,EAAAC,EAAAC,cAAA,WAASC,UAAU,QACjBH,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,8BAEFF,EAAAC,EAAAC,cAAA,mCAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,uBAGJH,EAAAC,EAAAC,cAAA,KAAGW,KAAK,cAAcV,UAAU,kBAC9BH,EAAAC,EAAAC,cAAA,OAAKY,IAAKC,IAAMC,IAAI,aAEtBhB,EAAAC,EAAAC,cAAA,YAIJF,EAAAC,EAAAC,cAAA,WAASM,GAAG,WACVR,EAAAC,EAAAC,cAAA,WAASM,GAAG,SACVR,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,+FAOJF,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACZH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEe,IAAI,sBACJC,OAAO,SACPL,KAAK,4BAHP,2DAQFb,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,2BAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKY,IAAKK,IAAMH,IAAI,sBAI1BhB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEe,IAAI,sBACJC,OAAO,SACPL,KAAK,gDAHP,2DAQFb,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,kBAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKY,IAAKM,IAAMJ,IAAI,iCAI1BhB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEe,IAAI,sBACJC,OAAO,SACPL,KAAK,oEAHP,qCAQFb,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,qBAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKY,IAAKO,IAAML,IAAI,gBAI1BhB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEe,IAAI,sBACJC,OAAO,SACPL,KAAK,iFAHP,qCAQFb,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,mBAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKY,IAAKQ,IAAMN,IAAI,gCAI1BhB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEe,IAAI,sBACJC,OAAO,SACPL,KAAK,yDAHP,8DASFb,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,mBAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKY,IAAKS,IAAMP,IAAI,8BAO9BhB,EAAAC,EAAAC,cAAA,WAASC,UAAU,SACjBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,SACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,oRAOAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,YAAYF,UAAU,UAA/B,kBAONH,EAAAC,EAAAC,cAAA,WAASM,GAAG,UACVR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,uBACyB,IACvBH,EAAAC,EAAAC,cAAA,KACEgB,OAAO,SACPD,IAAI,sBACJJ,KAAK,kCACLV,UAAU,0BAET,gBAnKEM,qBCwEJe,qBA9Eb,SAAAA,EAAY7B,GAAO,IAAAD,EAAA,OAAArC,OAAAoE,EAAA,EAAApE,CAAAyC,KAAA0B,IACjB9B,EAAArC,OAAAqE,EAAA,EAAArE,CAAAyC,KAAAzC,OAAAsE,EAAA,EAAAtE,CAAAmE,GAAAI,KAAA9B,KAAMH,KAMRkC,cAAgB,SAAApC,GACdC,EAAKC,MAAMmC,OAAOpC,EAAKC,MAAMa,KAN7Bd,EAAK5B,MAAQ,CACXiE,SAAS,GAHMrC,wEAcjB,IAAMsC,EAAU,UAAYlC,KAAKH,MAAMa,GACjCyB,EAAc,WAAanC,KAAKH,MAAMa,GAE5C,OACER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeL,KAAKH,MAAMuC,OACzClC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BAA0BL,KAAKH,MAAMwC,QACnDnC,EAAAC,EAAAC,cAAA,OACEC,UAAU,aACVK,GAAIwB,EACJI,SAAS,KACTC,KAAK,SACLC,kBAAgB,0BAChBC,cAAY,QAEZvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCAAqCkC,KAAK,YACvDrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,MACEC,UAAU,2BACVK,GAAG,2BAFL,eAIeV,KAAKH,MAAMuC,OAE1BlC,EAAAC,EAAAC,cAAA,UACEjC,KAAK,SACLkC,UAAU,SACVqC,eAAa,QACbC,aAAW,SAEXzC,EAAAC,EAAAC,cAAA,QAAMqC,cAAY,QAAlB,UAGJvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,8CAC6CH,EAAAC,EAAAC,cAAA,WAD7C,yBAIAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,UAAQjC,KAAK,SAASuE,eAAa,SAAnC,UAGAxC,EAAAC,EAAAC,cAAA,UACEjC,KAAK,SACLuE,eAAa,QACbjC,QAAST,KAAK+B,eAHhB,cAWR7B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaL,KAAKH,MAAM+C,MACrC1C,EAAAC,EAAAC,cAAA,UAAQjC,KAAK,SAAS0E,cAAY,QAAQC,cAAaX,GAAvD,gBAIFjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0BL,KAAKH,MAAMkD,cAzEzCpC,cCMbqC,qBACJ,SAAAA,EAAYnD,GAAO,IAAAD,EAAA,OAAArC,OAAAoE,EAAA,EAAApE,CAAAyC,KAAAgD,IACjBpD,EAAArC,OAAAqE,EAAA,EAAArE,CAAAyC,KAAAzC,OAAAsE,EAAA,EAAAtE,CAAAyF,GAAAlB,KAAA9B,KAAMH,KAcRoD,WAAa,SAAAtD,GACXZ,IACGmE,IAAI,2CAA4C,CAC/CC,OAAQ,CACNC,KAAMxD,EAAKC,MAAM9B,KAAKF,KAAKuF,QAG9BC,KAAK,SAAAC,GACJ,IAAMC,EAAeD,EAAIE,KAEzB5D,EAAK6D,SAAS,CAAEC,MAAOH,EAAcI,QAAQ,MAE9CC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MA3BXjE,EA8BnBoE,WAAa,SAAAtD,GACX3B,IACGiD,OAAO,wCAAyC,CAC/CmB,OAAQ,CACNzC,QAGH2C,KAAK,SAAAC,GACJ1D,EAAKqD,eAENW,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAtC5BjE,EAAK5B,MAAQ,CACX2F,QAAQ,EACRD,MAAO,IAJQ9D,mFASZI,KAAKH,MAAM9B,KAAKH,iBACnBoC,KAAKH,MAAMC,QAAQC,KAAK,KAE1BC,KAAKiD,8CA+BE,IACHgB,EADGC,EAAAlE,KAIHA,KAAKhC,MAAM0F,MAAMjG,OAAS,IAA2B,IAAtBuC,KAAKhC,MAAM2F,OAG5CM,EAFcjE,KAAKhC,MAAM0F,MAETS,IAAI,SAAAC,GAAI,OACtBlE,EAAAC,EAAAC,cAACiE,EAAD,CACEC,IAAKF,EAAKG,IACVlC,OAAQ+B,EAAK/B,OACbD,MAAOgC,EAAKhC,MACZW,KAAMqB,EAAKrB,KACXH,KAAMwB,EAAKxB,KACXlC,GAAI0D,EAAKG,IACTvC,OAAQkC,EAAKF,eAIjBC,EACE/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAb,sDAOR,OACEH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,aACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAYL,KAAKH,MAAM9B,KAAKF,KAAKuF,SAItDa,EACD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAChBH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,YAAT,8BAtFYI,cAyGTC,cANS,SAAA5C,GAAK,MAAK,CAChCD,KAAMC,EAAMD,KACZO,OAAQN,EAAMM,SAMd,KAFasC,CAGbC,YAAWmC,qBC9GPwB,cACJ,SAAAA,EAAY3E,GAAO,IAAAD,EAAA,OAAArC,OAAAoE,EAAA,EAAApE,CAAAyC,KAAAwE,IACjB5E,EAAArC,OAAAqE,EAAA,EAAArE,CAAAyC,KAAAzC,OAAAsE,EAAA,EAAAtE,CAAAiH,GAAA1C,KAAA9B,KAAMH,KAiBR4E,SAAW,SAAA9E,GACTA,EAAE+E,iBAEF,IAAMC,EAAW,CACfC,MAAOhF,EAAK5B,MAAM4G,MAClBC,SAAUjF,EAAK5B,MAAM6G,UAGvBjF,EAAKC,MAAMiF,UAAUH,IA1BJ/E,EAyCnBmF,SAAW,SAAApF,GACTC,EAAK6D,SAALlG,OAAAyH,EAAA,EAAAzH,CAAA,GAAiBoC,EAAEyB,OAAOgC,KAAOzD,EAAEyB,OAAO/D,SAxC1CuC,EAAK5B,MAAQ,CACX4G,MAAO,GACPC,SAAU,GACVI,SAAS,EACTnG,MAAO,GACPR,OAAQ,IAPOsB,mFAabI,KAAKH,MAAM9B,KAAKH,iBAClBoC,KAAKH,MAAMC,QAAQC,KAAK,2DAgBtBC,KAAKH,MAAM9B,KAAKH,iBAClBoC,KAAKH,MAAMC,QAAQC,KAAK,gEAIFmF,GACpBA,EAAU5G,QACZ0B,KAAKyD,SAAS,CAAEnF,OAAQ4G,EAAU5G,0CAQ7B,IACCA,EAAW0B,KAAKhC,MAAhBM,OAER,OAA2B,IAAvB0B,KAAKhC,MAAMiH,QACN/E,EAAAC,EAAAC,cAAC+E,EAAD,CAAWrG,MAAOkB,KAAKhC,MAAMc,QAIpCoB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,SACAH,EAAAC,EAAAC,cAAA,QAAMqE,SAAUzE,KAAKyE,UACnBvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAjB,SACAH,EAAAC,EAAAC,cAAA,SACEjC,KAAK,QACLkC,UAAW+E,IAAW,2BAA4B,CAChDC,yBAA0B/G,EAAOsG,QAEnCU,YAAY,cACZlC,KAAK,QACL2B,SAAU/E,KAAK+E,SACf1H,MAAO2C,KAAKhC,MAAM4G,QAEnBtG,EAAOsG,OACN1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,IAAoC/B,EAAOsG,MAA3C,MAGJ1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAjB,YACAH,EAAAC,EAAAC,cAAA,SACEjC,KAAK,WACLkC,UAAW+E,IAAW,2BAA4B,CAChDC,yBAA0B/G,EAAOuG,WAEnCS,YAAY,iBACZlC,KAAK,WACL2B,SAAU/E,KAAK+E,SACf1H,MAAO2C,KAAKhC,MAAM6G,WAEnBvG,EAAOuG,UACN3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,IAAoC/B,EAAOuG,SAA3C,MAIJ3E,EAAAC,EAAAC,cAAA,UAAQjC,KAAK,SAASkC,UAAU,OAAhC,mBA1FUM,aA8GLC,cALS,SAAA5C,GAAK,MAAK,CAChCD,KAAMC,EAAMD,KACZO,OAAQN,EAAMM,SAKd,CAAEwG,ULnGqB,SAAAH,GAAQ,OAAI,SAAArF,GACnCP,IACGqF,KAAK,mCAAoCO,GACzCtB,KAAK,SAAAC,GAAO,IAEHxE,EAAUwE,EAAIE,KAAd1E,MACRS,aAAagG,QAAQ,WAAYzG,GAEjCD,EAAaC,GAEb,IAAMM,EAAUoG,IAAW1G,GAC3BQ,EAASH,EAAeC,MAEzBwE,MAAM,SAAAC,GACLvE,EAAS,CACPnB,KHnCkB,aGoClBE,QAASwF,EAAI4B,SAASjC,YKiFf5C,CAGb4D,GChHIkB,qBACJ,SAAAA,EAAY7F,GAAO,IAAAD,EAAA,OAAArC,OAAAoE,EAAA,EAAApE,CAAAyC,KAAA0F,IACjB9F,EAAArC,OAAAqE,EAAA,EAAArE,CAAAyC,KAAAzC,OAAAsE,EAAA,EAAAtE,CAAAmI,GAAA5D,KAAA9B,KAAMH,KAkBR4E,SAAW,SAAA9E,GACTA,EAAE+E,iBAEF,IAAMC,EAAW,CACfvB,KAAMxD,EAAK5B,MAAMoF,KACjBwB,MAAOhF,EAAK5B,MAAM4G,MAClBC,SAAUjF,EAAK5B,MAAM6G,SACrBc,UAAW/F,EAAK5B,MAAM2H,WAIxB/F,EAAKC,MAAM+F,aAAajB,EAAU/E,EAAKC,MAAMC,UA9B5BF,EAwCnBmF,SAAW,SAAApF,GACTC,EAAK6D,SAALlG,OAAAyH,EAAA,EAAAzH,CAAA,GAAiBoC,EAAEyB,OAAOgC,KAAOzD,EAAEyB,OAAO/D,SAvC1CuC,EAAK5B,MAAQ,CACXoF,KAAM,GACNwB,MAAO,GACPC,SAAU,GACVc,UAAW,GACXV,SAAS,EACT3G,OAAQ,IAROsB,mFAcbI,KAAKH,MAAM9B,KAAKH,iBAClBoC,KAAKH,MAAMC,QAAQC,KAAK,gEAmBFmF,GACpBA,EAAU5G,QACZ0B,KAAKyD,SAAS,CAAEnF,OAAQ4G,EAAU5G,0CAQ7B,IACCA,EAAW0B,KAAKhC,MAAhBM,OAER,OACE4B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,YACAH,EAAAC,EAAAC,cAAA,QAAMqE,SAAUzE,KAAKyE,UACnBvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAjB,QACAH,EAAAC,EAAAC,cAAA,SACEjC,KAAK,OACLkC,UAAW+E,IAAW,2BAA4B,CAChDC,yBAA0B/G,EAAO8E,OAEnCkC,YAAY,aACZlC,KAAK,OACL2B,SAAU/E,KAAK+E,SACf1H,MAAO2C,KAAKhC,MAAMoF,OAEnB9E,EAAO8E,MACNlD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,IAAoC/B,EAAO8E,KAA3C,MAGJlD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAjB,SACAH,EAAAC,EAAAC,cAAA,SACEjC,KAAK,QACLkC,UAAW+E,IAAW,2BAA4B,CAChDC,yBAA0B/G,EAAOsG,QAEnCU,YAAY,cACZlC,KAAK,QACL2B,SAAU/E,KAAK+E,SACf1H,MAAO2C,KAAKhC,MAAM4G,QACjB,IACFtG,EAAOsG,OACN1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,IAAoC/B,EAAOsG,MAA3C,MAGJ1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAjB,YACAH,EAAAC,EAAAC,cAAA,SACEjC,KAAK,WACLkC,UAAW+E,IAAW,2BAA4B,CAChDC,yBAA0B/G,EAAOuG,WAEnCS,YAAY,iBACZlC,KAAK,WACL2B,SAAU/E,KAAK+E,SACf1H,MAAO2C,KAAKhC,MAAM6G,WAEnBvG,EAAOuG,UACN3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,IAAoC/B,EAAOuG,SAA3C,MAGJ3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAjB,oBACAH,EAAAC,EAAAC,cAAA,SACEjC,KAAK,WACLkC,UAAW+E,IAAW,2BAA4B,CAChDC,yBAA0B/G,EAAOqH,YAEnCL,YAAY,mBACZlC,KAAK,YACL2B,SAAU/E,KAAK+E,SACf1H,MAAO2C,KAAKhC,MAAM2H,YAEnBrH,EAAOqH,WACNzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,IAAoC/B,EAAOqH,UAA3C,MAIJzF,EAAAC,EAAAC,cAAA,UAAQjC,KAAK,SAASkC,UAAU,OAAhC,mBArHaM,cA2IRC,eAPS,SAAA5C,GAAK,MAAK,CAChCD,KAAMC,EAAMD,KACZO,OAAQN,EAAMM,SAOd,CAAEsH,aN9IwB,SAACjB,EAAU7E,GAAX,OAAuB,SAAAR,GACjDP,IACGqF,KAAK,sCAAuCO,GAC5CtB,KAAK,SAAAC,GAAG,OAAIxD,EAAQC,KAAK,YACzB6D,MAAM,SAAAC,GAAG,OACRvE,EAAS,CACPnB,KHbkB,aGclBE,QAASwF,EAAI4B,SAASjC,YMqIf5C,CAGbC,YAAW6E,ICjJPG,sBACJ,SAAAA,EAAYhG,GAAO,IAAAD,EAAA,OAAArC,OAAAoE,EAAA,EAAApE,CAAAyC,KAAA6F,IACjBjG,EAAArC,OAAAqE,EAAA,EAAArE,CAAAyC,KAAAzC,OAAAsE,EAAA,EAAAtE,CAAAsI,GAAA/D,KAAA9B,KAAMH,KAaR4E,SAAW,SAAA9E,GACTA,EAAE+E,iBAEF,IAAMoB,EAAW,CACf1D,MAAOxC,EAAK5B,MAAMoE,MAClBC,OAAQzC,EAAKC,MAAM9B,KAAKF,KAAKuF,KAC7BR,KAAMhD,EAAK5B,MAAM4E,MAGnB7D,IACGqF,KAAK,qCAAsC0B,GAC3CzC,KAAK,SAAAC,GACJ1D,EAAKC,MAAMC,QAAQC,KAAK,gBAEzB6D,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MA5BXjE,EA+BnBmF,SAAW,SAAApF,GACTC,EAAK6D,SAALlG,OAAAyH,EAAA,EAAAzH,CAAA,GAAiBoC,EAAEyB,OAAOgC,KAAOzD,EAAEyB,OAAO/D,SA9B1CuC,EAAK5B,MAAQ,CACXoE,MAAO,GACPQ,KAAM,IAJShD,mFASZI,KAAKH,MAAM9B,KAAKH,iBACnBoC,KAAKH,MAAMC,QAAQC,KAAK,2CA0B1B,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,QAAMqE,SAAUzE,KAAKyE,UACnBvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBAAjB,UACAH,EAAAC,EAAAC,cAAA,SACEjC,KAAK,QACLiF,KAAK,QACL/F,MAAO2C,KAAKhC,MAAMoE,MAClB2C,SAAU/E,KAAK+E,SACf1E,UAAU,2BACViF,YAAY,WAIhBpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBAAjB,YACAH,EAAAC,EAAAC,cAAA,YACEC,UAAU,eACV0F,KAAK,IACL3C,KAAK,OACL/F,MAAO2C,KAAKhC,MAAM4E,KAClBmC,SAAU/E,KAAK+E,YAGnB7E,EAAAC,EAAAC,cAAA,UAAQjC,KAAK,SAASkC,UAAU,OAAhC,iBA9DYM,cA2EPC,eAJS,SAAA5C,GAAK,MAAK,CAChCD,KAAMC,EAAMD,OAKZ,CAAE8H,YAFWjF,CAGbiF,ICnEF,GAAItG,aAAayG,SAAU,CAEzBnH,EAAaU,aAAayG,UAE1B,IAAM5G,GAAUoG,IAAWjG,aAAayG,UAExCzH,EAAMe,SAASH,EAAeC,KAG9B,IAAM6G,GAAcC,KAAKC,MAAQ,IAC7B/G,GAAQgH,IAAMH,IAEhB1H,EAAMe,SAASD,GAuBJgH,OAnBf,WACE,OACEnG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAU/H,MAAOA,GACf2B,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmG,EAAD,MACArG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,KACEtG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW7F,IACjCZ,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWnC,IACtCtE,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAWjB,KACzCxF,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,UAAW3D,IAC1C9C,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAWC,UC/BhCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOjH,EAAAC,EAAAC,cAACgH,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpE,KAAK,SAAAqE,GACjCA,EAAaC","file":"static/js/main.edf61bb9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img01.6ae18e9a.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/img02.44d5b239.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/img03.c0a5f5f6.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/img04.2ea5cd48.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/img05.153950f1.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/img06.4f98d856.jpeg\";","const isEmpty = value =>\n  value === undefined ||\n  value === null ||\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\n  (typeof value === 'string' && value.trim().length === 0);\n\nexport default isEmpty;\n","import isEmpty from '../helpers/is-empty';\n\nimport { SET_CURRENT_USER } from '../actions/types';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});\n","export const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\n","import { createStore, applyMiddleware, compose } from 'redux'; // Compose is brought in so that we can combine the reducer with what is required by chrome to add the Redux extension\nimport thunk from 'redux-thunk'; // Middleware\nimport rootReducer from './reducers/index'; // Step 1. This is where we will combine all other reducers and be able to bring it into one file as clean as possible\n\nconst initialState = {}; // Step 2\n\n// Create the store\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(applyMiddleware(thunk))\n);\n\n// Exporting the store to bring into main App.js file and be able to use across the entired app.\nexport default store;\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    //Apply to every request\n    axios.defaults.headers.common['Authorization'] = token;\n  } else {\n    // Delete the auth header\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from '../helpers/setAuthToken';\n\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\n\n// Register a user\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post('http://localhost:5000/auth/register', userData)\n    .then(res => history.push('/login'))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Login and get token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post('http://localhost:5000/auth/login', userData)\n    .then(res => {\n      // Save token to lcocal storage\n      const { token } = res.data;\n      localStorage.setItem('jwtToken', token);\n      // Set token to auth header\n      setAuthToken(token);\n      // Decode token to get user dataz\n      const decoded = jwt_decode(token);\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\n// Set the logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// Log User Out\nexport const logoutUser = () => dispatch => {\n  // Remove item from local storage\n  localStorage.removeItem('jwtToken');\n  // Remove auth header -- Call the same function as you did to set it but set it to false this time instead of passing in a token\n  setAuthToken(false);\n  // Set the 'Current User' to a empty object || that will also set 'isAuthenticated' to false. This will now deny access to protected routes\n  dispatch(setCurrentUser({}));\n};\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../../actions/authActions';\nimport PropTypes from 'prop-types';\n\nimport './Nav.css';\n\nclass Nav extends Component {\n  // Action to log out a user || Destroy token || set isAuthenticated === false\n  logout = e => {\n    this.props.logoutUser();\n    this.props.history.push('/');\n  };\n\n  render() {\n    const { isAuthenticated } = this.props.auth;\n\n    const notLoggedIn = (\n      <ul>\n        <li className='link'>\n          <Link to='/login'>Login</Link>\n        </li>\n        <li className='link'>\n          <Link to='/register'>Register</Link>\n        </li>\n      </ul>\n    );\n\n    const loggedIn = (\n      <ul>\n        <li className='link'>\n          <Link className='mr-5' to='/dashboard'>\n            My Blog\n          </Link>\n          <Link onClick={this.logout} to='/register'>\n            Logout\n          </Link>\n        </li>\n      </ul>\n    );\n\n    return (\n      <header id='header'>\n        <h1 className='nav-header'>\n          <Link to='/'>Private Blogging</Link>\n        </h1>\n        <nav className='links text-right mr-5'>\n          {isAuthenticated ? loggedIn : notLoggedIn}\n        </nav>\n      </header>\n    );\n  }\n}\n\nNav.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(withRouter(Nav));\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Home.css';\nimport img1 from '../../images/img01.jpeg';\nimport img2 from '../../images/img02.jpeg';\nimport img3 from '../../images/img03.jpeg';\nimport img4 from '../../images/img04.jpeg';\nimport img5 from '../../images/img05.jpeg';\nimport img6 from '../../images/img06.jpeg';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div id='wrapper'>\n        <div id='main'>\n          <article className='post'>\n            <header>\n              <div className='title'>\n                <h2>\n                  <div>One blog a day</div>\n                </h2>\n                <p>Keeps the doctor away</p>\n              </div>\n              <div className='meta'>\n                <time className='published'>Creative thinking</time>\n              </div>\n            </header>\n            <a href='single.html' className='image featured'>\n              <img src={img1} alt='Old pen' />\n            </a>\n            <p />\n          </article>\n        </div>\n\n        <section id='sidebar'>\n          <section id='intro'>\n            <header>\n              <h2>Private Blogs</h2>\n              <p>\n                The folllowing articles are evidence on why blogging/journaling\n                are so important\n              </p>\n            </header>\n          </section>\n\n          <section>\n            <ul className='posts'>\n              <li>\n                <article>\n                  <header>\n                    <h3>\n                      <a\n                        rel='noopener noreferrer'\n                        target='_blank'\n                        href='https://detailed.com/50/'\n                      >\n                        The 50 best blogs in the world. Ranked algorithmically\n                      </a>\n                    </h3>\n                    <time className='published'>Updated every 24 hours</time>\n                  </header>\n                  <div className='image'>\n                    <img src={img6} alt='winners scores' />\n                  </div>\n                </article>\n              </li>\n              <li>\n                <article>\n                  <header>\n                    <h3>\n                      <a\n                        rel='noopener noreferrer'\n                        target='_blank'\n                        href='https://www.apa.org/monitor/2014/06/blogging'\n                      >\n                        Blogging for mental health(Older, still worth reading)\n                      </a>\n                    </h3>\n                    <time className='published'>June 01, 2014</time>\n                  </header>\n                  <div className='image'>\n                    <img src={img5} alt='Man walking through field' />\n                  </div>\n                </article>\n              </li>\n              <li>\n                <article>\n                  <header>\n                    <h3>\n                      <a\n                        rel='noopener noreferrer'\n                        target='_blank'\n                        href='https://www.dreamhost.com/blog/19-expert-blogging-tips-for-2019/'\n                      >\n                        19 Expert blogging tips for 2019\n                      </a>\n                    </h3>\n                    <time className='published'>January 11, 2019</time>\n                  </header>\n                  <div className='image'>\n                    <img src={img4} alt='blog img' />\n                  </div>\n                </article>\n              </li>\n              <li>\n                <article>\n                  <header>\n                    <h3>\n                      <a\n                        rel='noopener noreferrer'\n                        target='_blank'\n                        href='https://bloggingbrute.com/beginning-blogging/should-you-start-a-blog-in-2019/'\n                      >\n                        Should you start a blog in 2019?\n                      </a>\n                    </h3>\n                    <time className='published'>Janury 7, 2019</time>\n                  </header>\n                  <div className='image'>\n                    <img src={img3} alt='Brown pencil and journal' />\n                  </div>\n                </article>\n              </li>\n              <li>\n                <article>\n                  <header>\n                    <h3>\n                      <a\n                        rel='noopener noreferrer'\n                        target='_blank'\n                        href='https://www.emarketinghacks.com/benefits-of-blogging/'\n                      >\n                        Benefits Of Blogging: 5 Reasons You Must Start A Blog\n                        Now\n                      </a>\n                    </h3>\n                    <time className='published'>April 12, 2019</time>\n                  </header>\n                  <div className='image'>\n                    <img src={img2} alt='Computer and notepad' />\n                  </div>\n                </article>\n              </li>\n            </ul>\n          </section>\n\n          <section className='blurb'>\n            <h2 className='text-center'>About</h2>\n            <p className='text-center'>\n              This is not a social media site. Nothing is for sale. Just a site\n              where people can write whatever it is they feel and have it be\n              completely private. Nobody will have access to anything you write.\n              Think of it as a private journal you have access to from anywhere\n              with wifi!\n            </p>\n            <ul className='actions '>\n              <li className='mx-auto'>\n                <Link to='/register' className='button'>\n                  Get started\n                </Link>\n              </li>\n            </ul>\n          </section>\n\n          <section id='footer'>\n            <p className='copyright'>\n              &copy; Joel Godoy 2019{' '}\n              <a\n                target='_blank'\n                rel='noopener noreferrer'\n                href='https://github.com/Joelgiovanni'\n                className='fab fa-github git-icon'\n              >\n                {' '}\n              </a>\n            </p>\n          </section>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport './Card.css';\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      changed: false\n    };\n  }\n\n  deleteOnClick = e => {\n    this.props.delete(this.props.id);\n  };\n\n  render() {\n    // These are so the Modal data resets every time it is closed and it doesnt load the same conetent for different posts\n\n    const modalId = 'myModal' + this.props.id;\n    const targetModal = '#myModal' + this.props.id;\n\n    return (\n      <div className='card text-center mt-4 mb-4'>\n        <div className='card-header'>{this.props.title}</div>\n        <div className='card-body'>\n          <h5 className='card-title author-name'>{this.props.author}</h5>\n          <div\n            className='modal fade'\n            id={modalId}\n            tabIndex='-1'\n            role='dialog'\n            aria-labelledby='exampleModalCenterTitle'\n            aria-hidden='true'\n          >\n            <div className='modal-dialog modal-dialog-centered' role='document'>\n              <div className='modal-content'>\n                <div className='modal-header'>\n                  <h5\n                    className='modal-title mx-auto mt-4'\n                    id='exampleModalCenterTitle'\n                  >\n                    Post Title: {this.props.title}\n                  </h5>\n                  <button\n                    type='button'\n                    className='close '\n                    data-dismiss='modal'\n                    aria-label='Close'\n                  >\n                    <span aria-hidden='true'>&times;</span>\n                  </button>\n                </div>\n                <div className='modal-body'>\n                  Are you sure you want to delete this post? <br />\n                  This cannot be undone\n                </div>\n                <div className='modal-footer '>\n                  <button type='button' data-dismiss='modal'>\n                    Cancel\n                  </button>\n                  <button\n                    type='button'\n                    data-dismiss='modal'\n                    onClick={this.deleteOnClick}\n                  >\n                    Delete\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <p className='card-text'>{this.props.body}</p>\n          <button type='button' data-toggle='modal' data-target={targetModal}>\n            Delete Post\n          </button>\n        </div>\n        <div className='card-footer text-muted'>{this.props.date}</div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Card from './Card';\nimport './Dashboard.css';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      posts: {}\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.auth.isAuthenticated) {\n      this.props.history.push('/');\n    }\n    this.fetchPosts();\n  }\n\n  fetchPosts = e => {\n    axios\n      .get('http://localhost:5000/auth/loadUserPosts', {\n        params: {\n          name: this.props.auth.user.name\n        }\n      })\n      .then(res => {\n        const fetchedPosts = res.data;\n        // Set the state for the users posts\n        this.setState({ posts: fetchedPosts, loaded: true });\n      })\n      .catch(err => console.log(err));\n  };\n\n  deletePost = id => {\n    axios\n      .delete('http://localhost:5000/auth/deletePost', {\n        params: {\n          id\n        }\n      })\n      .then(res => {\n        this.fetchPosts();\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    let content;\n\n    // If posts are not empty and the data is loaded then render the posts..\n    if (this.state.posts.length > 0 && this.state.loaded === true) {\n      const posts = this.state.posts;\n\n      content = posts.map(post => (\n        <Card\n          key={post._id}\n          author={post.author}\n          title={post.title}\n          date={post.date}\n          body={post.body}\n          id={post._id}\n          delete={this.deletePost}\n        />\n      ));\n    } else {\n      content = (\n        <div className='row'>\n          <div className='col text-center'>\n            <p className='started'>\n              You dont have any posts yet.. Lets get started!!\n            </p>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className='container mt-4'>\n        <div className='row'>\n          <div className='col text-center'>\n            <h3>\n              <span className='welcome'> Welcome:</span>\n              <span className='userName'>{this.props.auth.user.name}</span>\n            </h3>\n          </div>\n        </div>\n        {content}\n        <div className='col text-center'>\n          <button className='btn new-postbtn'>\n            <Link to='/newPost'> Create New Post</Link>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Setting up Redux in this component\nDashboard.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\n// WithRouter will pass updated match, location, and history props to the wrapped component whenever it renders.\nexport default connect(\n  mapStateToProps,\n  null\n)(withRouter(Dashboard));\n","import React, { Component } from 'react';\nimport { loginUser } from '../../actions/authActions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Dashboard from '../layout/Dashboard';\nimport classnames from 'classnames';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      success: false,\n      token: {},\n      errors: {}\n    };\n  }\n\n  // Redirect to dashboard if the user is logged in || Will not allow a logged in user to have access to this component\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    // Calling the actual Axios request through props\n    this.props.loginUser(userData);\n  };\n\n  componentDidUpdate() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    if (this.state.success === true) {\n      return <Dashboard token={this.state.token} />;\n    }\n\n    return (\n      <div className='container mt-5 text-center'>\n        <h1 className='register-header'>Login</h1>\n        <form onSubmit={this.onSubmit}>\n          <div className='form-group'>\n            <label className='form-label'>Email</label>\n            <input\n              type='email'\n              className={classnames('form-control text-center', {\n                'is-invalid text-center': errors.email\n              })}\n              placeholder='Enter Email'\n              name='email'\n              onChange={this.onChange}\n              value={this.state.email}\n            />\n            {errors.email && (\n              <div className='invalid-feedback'> {errors.email} </div>\n            )}\n          </div>\n          <div className='form-group'>\n            <label className='form-label'>Password</label>\n            <input\n              type='password'\n              className={classnames('form-control text-center', {\n                'is-invalid text-center': errors.password\n              })}\n              placeholder='Enter Password'\n              name='password'\n              onChange={this.onChange}\n              value={this.state.password}\n            />\n            {errors.password && (\n              <div className='invalid-feedback'> {errors.password} </div>\n            )}\n          </div>\n\n          <button type='submit' className='btn'>\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../actions/authActions';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport './Register.css';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      password2: '',\n      success: false,\n      errors: {}\n    };\n  }\n\n  // Redirect to dashboard if the user is logged in || Will not allow a logged in user to have access to this component\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const userData = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    // This is the call that fires off the Register action\n    this.props.registerUser(userData, this.props.history);\n  };\n\n  // Will check for errors in the props that will be recieved. Will set the errors to the errors object in state and render them on the UI\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className='container mt-5 text-center'>\n        <h1 className='register-header'>Register</h1>\n        <form onSubmit={this.onSubmit}>\n          <div className='form-group'>\n            <label className='form-label'>Name</label>\n            <input\n              type='text'\n              className={classnames('form-control text-center', {\n                'is-invalid text-center': errors.name\n              })}\n              placeholder='Enter Name'\n              name='name'\n              onChange={this.onChange}\n              value={this.state.name}\n            />\n            {errors.name && (\n              <div className='invalid-feedback'> {errors.name} </div>\n            )}\n          </div>\n          <div className='form-group'>\n            <label className='form-label'>Email</label>\n            <input\n              type='email'\n              className={classnames('form-control text-center', {\n                'is-invalid text-center': errors.email\n              })}\n              placeholder='Enter Email'\n              name='email'\n              onChange={this.onChange}\n              value={this.state.email}\n            />{' '}\n            {errors.email && (\n              <div className='invalid-feedback'> {errors.email} </div>\n            )}\n          </div>\n          <div className='form-group'>\n            <label className='form-label'>Password</label>\n            <input\n              type='password'\n              className={classnames('form-control text-center', {\n                'is-invalid text-center': errors.password\n              })}\n              placeholder='Enter Password'\n              name='password'\n              onChange={this.onChange}\n              value={this.state.password}\n            />\n            {errors.password && (\n              <div className='invalid-feedback'> {errors.password} </div>\n            )}\n          </div>\n          <div className='form-group'>\n            <label className='form-label'>Confirm Password</label>\n            <input\n              type='password'\n              className={classnames('form-control text-center', {\n                'is-invalid text-center': errors.password2\n              })}\n              placeholder='Confirm Password'\n              name='password2'\n              onChange={this.onChange}\n              value={this.state.password2}\n            />\n            {errors.password2 && (\n              <div className='invalid-feedback'> {errors.password2} </div>\n            )}\n          </div>\n\n          <button type='submit' className='btn'>\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\n// Setting up Redux in Component\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\n// WithRouter will pass updated match, location, and history props to the wrapped component whenever it renders.\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport './NewPost.css';\n\nclass newPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      body: ''\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.auth.isAuthenticated) {\n      this.props.history.push('/login');\n    }\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const postData = {\n      title: this.state.title,\n      author: this.props.auth.user.name,\n      body: this.state.body\n    };\n\n    axios\n      .post('http://localhost:5000/auth/newPost', postData)\n      .then(res => {\n        this.props.history.push('/dashboard');\n      })\n      .catch(err => console.log(err));\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    return (\n      <div className='container text-center'>\n        <form onSubmit={this.onSubmit}>\n          <div className='form-group mb-4'>\n            <label className='form-heading'>Title:</label>\n            <input\n              type='title'\n              name='title'\n              value={this.state.title}\n              onChange={this.onChange}\n              className='form-control text-center'\n              placeholder='Title'\n            />\n          </div>\n\n          <div className='form-group mt-5'>\n            <label className='form-heading'>Content:</label>\n            <textarea\n              className='form-control'\n              rows='4'\n              name='body'\n              value={this.state.body}\n              onChange={this.onChange}\n            />\n          </div>\n          <button type='submit' className='btn'>\n            Post\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { newPost }\n)(newPost);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Switch, Route } from 'react-router-dom';\nimport setAuthToken from './helpers/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { setCurrentUser, logoutUser } from './actions/authActions';\nimport Nav from './components/layout/Nav';\nimport Home from './components/layout/Home';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport Dashboard from './components/layout/Dashboard';\nimport NewPost from './components/layout/newPost';\n\n// KEEPS A USER LOGGED IN ON REFRESH && this logic will check for a valid token on every route and the token must either be manually destroyed with the logout function or the token must expire\nif (localStorage.jwtToken) {\n  // Set auth token header\n  setAuthToken(localStorage.jwtToken);\n  // Decode token and get user info\n  const decoded = jwt_decode(localStorage.jwtToken);\n  // Set user and is Authenticated\n  store.dispatch(setCurrentUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // This will vary depending on the amount of time that you set for token exp.\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser);\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route exact path='/login' component={Login} />\n            <Route exact path='/register' component={Register} />\n            <Route exact path='/dashboard' component={Dashboard} />\n            <Route exact path='/newPost' component={NewPost} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}